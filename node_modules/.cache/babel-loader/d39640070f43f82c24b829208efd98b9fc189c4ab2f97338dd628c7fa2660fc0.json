{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelRadio as _vModelRadio, withDirectives as _withDirectives, createTextVNode as _createTextVNode, vShow as _vShow } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"container\"\n};\nvar _hoisted_2 = {\n  \"class\": \"title\"\n};\nvar _hoisted_3 = [\"value\", \"name\", \"onUpdate:modelValue\"];\nvar _hoisted_4 = {\n  \"class\": \"btn\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", _hoisted_2, _toDisplayString($data.title), 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.questions, function (question, index) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: question.id\n    }, [_withDirectives(_createElementVNode(\"div\", null, [_createElementVNode(\"h5\", null, \"Question number \" + _toDisplayString(question.id) + \" out of 10\", 1 /* TEXT */), _createElementVNode(\"h2\", null, _toDisplayString(question.text), 1 /* TEXT */), _createElementVNode(\"ol\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(question.responses, function (response) {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: response.text\n      }, [_createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"input\", {\n        type: \"radio\",\n        value: response.correct,\n        name: index,\n        \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n          return $options.userResponses[index] = $event;\n        }\n      }, null, 8 /* PROPS */, _hoisted_3), [[_vModelRadio, $options.userResponses[index]]]), _createTextVNode(_toDisplayString(response.text), 1 /* TEXT */)])]);\n    }), 128 /* KEYED_FRAGMENT */))])], 512 /* NEED_PATCH */), [[_vShow, index === $data.questionIndex]])]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"button\", {\n    \"class\": \"prevnext\",\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $options.previous && $options.previous.apply($options, arguments);\n    })\n  }, \"Prev\"), _createElementVNode(\"button\", {\n    \"class\": \"prevnext\",\n    onClick: _cache[1] || (_cache[1] = function () {\n      return $options.next && $options.next.apply($options, arguments);\n    })\n  }, \"Next\")])]);\n}","map":{"version":3,"mappings":";;EACO,SAAM;AAAW;;EAChB,SAAM;AAAO;;;EAcZ,SAAM;AAAK;;uBAflBA,oBAmBM,OAnBNC,UAmBM,GAlBJC,oBAAkC,MAAlCC,UAAkC,mBAAbC,WAAK,qCAC1BJ,oBAYMK,6BAZ2BD,eAAS,YAA7BE,QAAQ,EAAEC,KAAK;yBAA5BP,oBAYM;MAZuCQ,GAAG,EAAEF,QAAQ,CAACG;wBACzDP,oBAUM,cATJA,oBAAoD,YAAhD,kBAAgB,oBAAGI,QAAQ,CAACG,EAAE,IAAG,YAAU,iBAC/CP,oBAA8B,6BAAtBI,QAAQ,CAACI,IAAI,kBACrBR,oBAMK,gCALHF,oBAIKK,6BAJkBC,QAAQ,CAACK,SAAS,YAA9BC,QAAQ;2BAAnBZ,oBAIK;QAJuCQ,GAAG,EAAEI,QAAQ,CAACF;UACxDR,oBAEQ,gCADNA,oBAA2F;QAApFW,IAAI,EAAC,OAAO;QAAEC,KAAK,EAAEF,QAAQ,CAACG,OAAO;QAAGC,IAAI,EAAET,KAAK;;iBAAWU,sBAAa,CAACV,KAAK;QAAA;2DAAnBU,sBAAa,CAACV,KAAK,wCAAMK,QAAQ,CAACF,IAAI;wEANtGH,KAAK,KAAKH,mBAAa;kCAYtCF,oBAGM,OAHNgB,UAGM,GAFJhB,oBAA4D;IAApD,SAAM,UAAU;IAAMiB,OAAK;MAAA,OAAEF,iEAAQ;IAAA;KAAE,MAAI,GACnDf,oBAAwD;IAAhD,SAAM,UAAU;IAAMiB,OAAK;MAAA,OAAEF,yDAAI;IAAA;KAAE,MAAI","names":["_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","$data","_Fragment","question","index","key","id","text","responses","response","type","value","correct","name","$options","_hoisted_4","onClick"],"sourceRoot":"","sources":["C:\\Users\\Kriss Lee\\Documents\\GitHub\\quiz-vue\\src\\views\\Quiz.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h2 class=\"title\">{{ title }}</h2>\r\n    <div v-for=\"(question, index) in questions\" :key=\"question.id\">\r\n      <div v-show=\"index === questionIndex\">\r\n        <h5>Question number {{ question.id }} out of 10</h5>\r\n        <h2>{{  question.text  }}</h2>\r\n        <ol>\r\n          <li v-for=\"response in question.responses\" :key=\"response.text\">\r\n            <label>\r\n              <input type=\"radio\" :value=\"response.correct\" :name=\"index\" v-model=\"userResponses[index]\">{{ response.text }}\r\n            </label>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n    </div>\r\n    <div class=\"btn\">\r\n      <button class=\"prevnext\" v-on:click=\"previous\">Prev</button>\r\n      <button class=\"prevnext\" v-on:click=\"next\">Next</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport data from '../../data/db'\r\nexport default {\r\n  data() {\r\n    return {\r\n      questions: data.questions,\r\n      title: 'True OR False Quiz',\r\n      questionIndex: 0,\r\n    }\r\n  },\r\n  mounted() {\r\n    console.log('sadas', this.questions)\r\n    // fetch('http://localhost:3000/questions')\r\n    // .then(res => res.json())\r\n    // .then(data => this.jobs = data)\r\n    // .catch(err => console.log(err.message))\r\n  },\r\n  computed:{\r\n    userResponses(){return Array(this.quiz.questions.length).fill(false)} \r\n  },\r\n  methods: {\r\n    next() {\r\n      this.questionIndex++;\r\n    },\r\n    previous() {\r\n      this.questionIndex--;\r\n    },\r\n    score: function() {\r\n      return this.userResponses.filter(function(val) {return val }).length\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n.container {\r\n  background: #eaeaebc2;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 40%;\r\n  margin-top: -200px;\r\n  margin-left: -200px;\r\n  width: 750px;\r\n  height: 440px;\r\n  align-content: center;\r\n  box-shadow: 5px 5px 10px 5px rgba(61, 2, 85, 0.351);\r\n  color: rgb(33, 0, 37);\r\n;\r\n  border-radius: 5px;\r\n}\r\n.title {\r\n  background: #342c59;\r\n  text-align: center;\r\n  margin: 0;\r\n  padding: 10px;\r\n  color: rgba(255, 254, 254, 0.834);\r\n}\r\n.prevnext {\r\n  font-size: 15px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
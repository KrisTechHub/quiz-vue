{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vShow as _vShow, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-6131a30f\"), n = n(), _popScopeId(), n;\n};\nvar _hoisted_1 = {\n  \"class\": \"container\"\n};\nvar _hoisted_2 = {\n  \"class\": \"title\"\n};\nvar _hoisted_3 = {\n  \"class\": \"radio-button\"\n};\nvar _hoisted_4 = [\"value\", \"name\"];\nvar _hoisted_5 = {\n  \"class\": \"btn\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", _hoisted_2, _toDisplayString($data.title), 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.questions, function (question, index) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: question.id\n    }, [_withDirectives(_createElementVNode(\"div\", null, [_createElementVNode(\"h5\", null, \"Question number \" + _toDisplayString(question.id) + \" out of 10\", 1 /* TEXT */), _createElementVNode(\"h2\", null, _toDisplayString(question.text), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(question.responses, function (response) {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: response.text\n      }, [_createElementVNode(\"input\", {\n        type: \"radio\",\n        value: response.correct,\n        name: index,\n        checked: \"\"\n      }, null, 8 /* PROPS */, _hoisted_4), _createElementVNode(\"label\", null, _toDisplayString(response.text), 1 /* TEXT */)]);\n    }), 128 /* KEYED_FRAGMENT */))])], 512 /* NEED_PATCH */), [[_vShow, index === $data.questionIndex]])]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"button\", {\n    \"class\": \"prevnext next\",\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $options.previous && $options.previous.apply($options, arguments);\n    })\n  }, \"Prev\"), _createElementVNode(\"button\", {\n    \"class\": \"prevnext prev\",\n    onClick: _cache[1] || (_cache[1] = function () {\n      return $options.next && $options.next.apply($options, arguments);\n    })\n  }, \"Next\")])]);\n}","map":{"version":3,"mappings":";;;;;EACO,SAAM;AAAW;;EAChB,SAAM;AAAO;;EAKR,SAAM;AAAc;;;EAQxB,SAAM;AAAK;;uBAdlBA,oBAkBM,OAlBNC,UAkBM,GAjBJC,oBAAkC,MAAlCC,UAAkC,mBAAbC,WAAK,qCAC1BJ,oBAWMK,6BAX2BD,eAAS,YAA7BE,QAAQ,EAAEC,KAAK;yBAA5BP,oBAWM;MAXuCQ,GAAG,EAAEF,QAAQ,CAACG;wBACzDP,oBASM,cARJA,oBAAoD,YAAhD,kBAAgB,oBAAGI,QAAQ,CAACG,EAAE,IAAG,YAAU,iBAC/CP,oBAA8B,6BAAtBI,QAAQ,CAACI,IAAI,kBACrBR,oBAKM,OALNS,UAKM,sBAJJX,oBAGKK,6BAHkBC,QAAQ,CAACM,SAAS,YAA9BC,QAAQ;2BAAnBb,oBAGK;QAHuCQ,GAAG,EAAEK,QAAQ,CAACH;UACtDR,oBAAoE;QAA7DY,IAAI,EAAC,OAAO;QAAEC,KAAK,EAAEF,QAAQ,CAACG,OAAO;QAAGC,IAAI,EAAEV,KAAK;QAAEW,OAAO,EAAP;2CAC5DhB,oBAAkC,gCAAxBW,QAAQ,CAACH,IAAI;wEANlBH,KAAK,KAAKH,mBAAa;kCAWtCF,oBAGM,OAHNiB,UAGM,GAFJjB,oBAAiE;IAAzD,SAAM,eAAe;IAAMkB,OAAK;MAAA,OAAEC,iEAAQ;IAAA;KAAE,MAAI,GACxDnB,oBAA6D;IAArD,SAAM,eAAe;IAAMkB,OAAK;MAAA,OAAEC,yDAAI;IAAA;KAAE,MAAI","names":["_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","$data","_Fragment","question","index","key","id","text","_hoisted_3","responses","response","type","value","correct","name","checked","_hoisted_5","onClick","$options"],"sourceRoot":"","sources":["C:\\Users\\Kriss Lee\\Documents\\GitHub\\quiz-vue\\src\\views\\Quiz.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h2 class=\"title\">{{ title }}</h2>\r\n    <div v-for=\"(question, index) in questions\" :key=\"question.id\">\r\n      <div v-show=\"index === questionIndex\">\r\n        <h5>Question number {{ question.id }} out of 10</h5>\r\n        <h2>{{  question.text  }}</h2>\r\n        <div class=\"radio-button\">\r\n          <li v-for=\"response in question.responses\" :key=\"response.text\">\r\n              <input type=\"radio\" :value=\"response.correct\" :name=\"index\" checked>\r\n              <label>{{ response.text }}</label>\r\n          </li>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"btn\">\r\n      <button class=\"prevnext next\" v-on:click=\"previous\">Prev</button>\r\n      <button class=\"prevnext prev\" v-on:click=\"next\">Next</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport data from '../../data/db'\r\nexport default {\r\n  data() {\r\n    return {\r\n      questions: data.questions,\r\n      title: 'True OR False Quiz',\r\n      questionIndex: 0,\r\n    }\r\n  },\r\n  mounted() {\r\n    console.log('sadas', this.questions)\r\n    // fetch('http://localhost:3000/questions')\r\n    // .then(res => res.json())\r\n    // .then(data => this.jobs = data)\r\n    // .catch(err => console.log(err.message))\r\n  },\r\n  methods: {\r\n    next() {\r\n      this.questionIndex++;\r\n    },\r\n    previous() {\r\n      this.questionIndex--;\r\n    },\r\n    score: function() {\r\n      return this.userResponses.filter(function(val) {return val }).length\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  background: #eaeaebc2;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 40%;\r\n  margin-top: -200px;\r\n  margin-left: -200px;\r\n  width: 750px;\r\n  height: 340px;\r\n  align-content: center;\r\n  box-shadow: 5px 5px 10px 5px rgba(61, 2, 85, 0.351);\r\n  color: rgb(33, 0, 37);\r\n  border-radius: 5px;\r\n}\r\n.title {\r\n  background: #342c59;\r\n  text-align: center;\r\n  margin: 0;\r\n  padding: 10px;\r\n  color: rgba(255, 254, 254, 0.834);\r\n}\r\nli {\r\n  display: inline-block;\r\n}\r\n.radio-button input[type=\"radio\"] {\r\n        display: none;\r\n      }   \r\n      .radio-button label {\r\n        display: inline-block;\r\n        background-color: #d1d1d1;\r\n        padding: 10px 20px;\r\n        font-family: sans-serif, Arial;\r\n        font-size: 16px;\r\n        border: 1px solid #666;\r\n        border-radius: 4px;\r\n      }\r\n      .radio-button label:hover {\r\n        background-color: #bababa;\r\n      }\r\n      .radio-button input[type=\"radio\"]:focus + label{\r\n        border: 2px dashed #666;\r\n      }\r\n      .radio-button input[type=\"radio\"]:checked + label{\r\n        background-color: #737875;\r\n        border-color: #666;\r\n      }   \r\n.prevnext {\r\n  font-size: 15px;\r\n  background: none;\r\n  color: #342c59;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  border-radius: 5px;\r\n  box-shadow: none;\r\n}\r\n.prevnext:active {\r\n  background-color: #342c59;\r\n  color: white;\r\n  box-shadow: none;\r\n}\r\n.prevnext:hover {\r\n  background-color: #342c59;\r\n  color: white;\r\n}\r\n.next {\r\n  margin-right: 500px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}